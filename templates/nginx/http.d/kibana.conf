map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

{% if dehydrated | cert_exists(kibana.domain) and kibana.use_dehydrated %}
server {
  listen 0.0.0.0:80;
  listen [::]:80;
  {% if ansible_local.proserver|default(none) and ansible_local.proserver.routing.with_gate64 -%}
  listen [::1]:87 proxy_protocol;
  {%- endif %}

  server_name {{ kibana.domain }};

  root /var/null;

  location / {
    return 301 https://$host$request_uri;
  }

  include {{ nginx.prefix.config }}/include/letsencrypt.conf;
}

server {
  listen 0.0.0.0:443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ kibana.domain }};
  
  client_max_body_size 100M;

  include {{ nginx.prefix.config }}/include/security_headers.conf;

  {% if kibana.oauth2_proxy %}
  location /proserver/iap {
    proxy_pass http://[::1]:{{ oauth2_proxy.config[kibana.oauth2_proxy].http_address.split(":")[-1] }};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Auth-Request-Redirect $request_uri;
  }

  location = /proserver/iap/auth {
    proxy_pass http://[::1]:{{ oauth2_proxy.config[kibana.oauth2_proxy].http_address.split(":")[-1] }};
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header Content-Length "";
    proxy_pass_request_body off;
  }
  {% endif %}

  location / {
    {% if kibana.oauth2_proxy %}
    auth_request /proserver/iap/auth;
    error_page 401 = /proserver/iap/sign_in;
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;
    {% endif %}

    proxy_pass http://127.0.0.1:5601;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  ssl_certificate {{ dehydrated|cert_fullchain(kibana.domain) }};
  ssl_certificate_key {{ dehydrated|cert_privkey(kibana.domain) }};
  ssl_trusted_certificate {{ dehydrated|cert_chain(kibana.domain) }};
  include {{ nginx.prefix.config }}/include/https_params.conf;
}
{% else %}

server {
  listen 0.0.0.0:80;
  listen [::]:80;

  server_name {{ kibana.domain }};

  location / {
    proxy_pass http://127.0.0.1:5601;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
}
{% endif %}
